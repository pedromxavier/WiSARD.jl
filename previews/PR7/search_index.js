var documenterSearchIndex = {"docs":
[{"location":"examples/#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"examples/#","page":"Examples","title":"","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"using WiSARD\n\nwnn = WNN{String, UInt}(28, 28)","category":"page"},{"location":"manual/#Manual","page":"Manual","title":"Manual","text":"","category":"section"},{"location":"manual/","page":"Manual","title":"Manual","text":"WiSARD's interface is very simple.","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"WiSARD.WNN\nWiSARD.train!\nWiSARD.classify","category":"page"},{"location":"manual/#WiSARD.WNN","page":"Manual","title":"WiSARD.WNN","text":"WNN{S, T}(d::Int, n::Int; seed::Union{Int, Nothing}=nothing) where {S <: Any, T <: Union{Unsigned, BigInt}}\nWNN{T}(d::Int, n::Int; seed::Union{Int, Nothing}=nothing) where {T <: Union{Unsigned, BigInt}}\n\nReferences:\n\n[1] Carvalho, Danilo & Carneiro, Hugo & FranÃ§a, Felipe & Lima, Priscila. (2013). B-bleaching : Agile Overtraining Avoidance in the WiSARD Weightless Neural Classifier. \n\n\n\n\n\n","category":"type"},{"location":"manual/#WiSARD.train!","page":"Manual","title":"WiSARD.train!","text":"train!(wnn::WNN{S, T}, x::S, y::Vector{Bool}) where {S, T}\n\nTrain model with a single pair (class x, sample y)\n\n\n\n\n\n","category":"function"},{"location":"manual/#WiSARD.classify","page":"Manual","title":"WiSARD.classify","text":"classify(wnn::WNN, y::Vector{Bool}; bleach=0::Int, gamma=0.5::Float)\n\nClassifies input y returning some label x. If no training happened, nothing will be returned instead.\n\n\n\n\n\n","category":"function"},{"location":"manual/#Encoding","page":"Manual","title":"Encoding","text":"","category":"section"},{"location":"manual/","page":"Manual","title":"Manual","text":"WiSARD.thermometer","category":"page"},{"location":"manual/#WiSARD.thermometer","page":"Manual","title":"WiSARD.thermometer","text":"thermometer(x::Float64, n::Int)\nthermometer(x::Vector{Float64}, n::Int)\n\n\n\n\n\n","category":"function"},{"location":"#WiSARD.jl-Documentation","page":"Home","title":"WiSARD.jl Documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This package implements the WiSARD (Wilkie, Stoneham and Aleksander Recognition Device) Weightless Neural Network Model, a lightning-fast classifier over binary data.","category":"page"},{"location":"#Quick-Start","page":"Home","title":"Quick Start","text":"","category":"section"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"pkg> add WiSARD","category":"page"},{"location":"","page":"Home","title":"Home","text":"or","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> import Pkg\n\njulia> Pkg.add(\"WiSARD\")","category":"page"},{"location":"#Example","page":"Home","title":"Example","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using WiSARD\n\nwnn = WNN{Symbol, UInt}(2, 2)\n\ntrain!(wnn, :x, [1 1 0 0])\ntrain!(wnn, :y, [0 0 1 1])\n\nclassify(wnn, [1 1 0 0]) == :x","category":"page"},{"location":"#Citing-WiSARD.jl","page":"Home","title":"Citing WiSARD.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"@software{\n    author={{Pedro Maciel Xavier}},\n    title={{WiSARD.jl}},\n    url = {https://github.com/pedromxavier/WiSARD.jl},\n    version = {0.1.0},\n    date = {2022-04-01},\n}","category":"page"},{"location":"booklet/#Booklet","page":"Booklet","title":"Booklet","text":"","category":"section"},{"location":"booklet/","page":"Booklet","title":"Booklet","text":"WiSARD.rate","category":"page"},{"location":"booklet/#WiSARD.rate","page":"Booklet","title":"WiSARD.rate","text":"\n\n\n\n","category":"function"}]
}
